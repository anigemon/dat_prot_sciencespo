i
for (i in 9:length(users)){
if (length(lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F))!=0){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(abc[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}}
users[i]
get_friends(users[i])
rate_limit(get_tokens())
rate_limit(get_tokens())
get_friends(users[i])
userrelations
userrelations[[1]]
userrelations[[2]]
userrelations[[3]]
userrelations[[4]]
userrelations[[5]]
userrelations[[6]]
users[[6]]
users[[7]]
userrelations[[7]]
userrelations[[8]]
userrelations[[9]]
i
for (i in 1:length(users)){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
user_el <- do.call("rbind",userrelations)
userrelations
userrelations
length(userrelations[[1]])
length(userrelations[[2]])
userrelations[[2]]
userrelations[[3]]
length(userrelations[[3]])
length(userrelations[[4]])
length(userrelations[[5]])
length(userrelations[[6]])
length(userrelations[[7]])
length(userrelations[[8]])
userrelations[[7]]
users[i]
userrelations[[7]]
i
i=7
get_friends(users[i])
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
friends$user
users[i]
friends$user <- users[i]
userrelations[[i]] <- friends
for (i in 8:length(users)){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
get_friends(users[i])
for (i in 9:length(users)){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users[i]
get_friends(users[i])
# Import list of actors --------------------------------------------------------------------
actors <- read.table("../data/actors.csv", sep=";", header=T,stringsAsFactors=F)
users <- actors$Twitter
i
users[i])
users[i]
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
friends$user
userrelations[[i]] <- friends
i
for (i in 12:length(users)){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users[i]
users[i]
get_friends(users[i])
get_tokens()
rate_limit(get_tokens())
rate_limit(get_tokens())
length(userrelations[[1]])
lapply(userrelations, length)
userrelations[[11]]
userrelations[[11]]
userrelations[[9]]
lapply(userrelations, length)
rate_limit(get_tokens())
i=11
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
friends$user
userrelations[[i]] <- friends
lapply(userrelations, length)
friends
get_friends(users[i])
lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends[[1]][which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
[which(names(friends[[1]]) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
names(friends[[1]])
friends[[1]]
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
names(friends[[1]])
friends
names(friends)
friends[[1]][which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends[which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count")),]
names(friends)
which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))
friends[which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count")),]
friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends <- friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
names(friends)
userrelations[[i]]
lapply(userrelations, length)
users[6]
users[7]
i=7
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
lapply(userrelations, length)
i=8
users[7]
users[8]
users[9]
i=9
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
lapply(userrelations, length)
for (i in 12:length(users)){
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users[12]
get_friends(users[i])
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
friends <- friends[,which(names(friends) %in% c("id_str", "name", "screen_name", "location", "description", "followers_count", "friends_count"))]
nrow(friends[[1]])
friends
names(friends)
getUser(get_friends(users[i]))
rate_limit(get_tokens())
rate_limit(get_tokens())
rate_limit()
rate_limit()
rate_limit(get_tokens())
friends <- lookup_users(get_friends(users[i]), parse = F,tw=F,clean_tweets = F)
getUser(get_friends(users[i]))
getUsers(get_friends(users[i]))
get_friends(users[i])
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = F,tw=F,clean_tweets = F)
friends
lookupUsers(fr)
lookupUsers(fr)
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
class(friends)
friends$user <- users[i]
for (i in 12:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
for (i in 1:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
i=7
users[i]
get_friends(users[i])
for (i in 7:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users(8)
users[8]
for (i in 9:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
for (i in 9:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users[i]
get_friends(users[i])
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
for (i in 25:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
users[i]
get_friends(users[i])
get_friends(users[i])
rate_limit(token())
rate_limit(get_token())
rate_limit(get_token)
?get_token
??get_token
rate_limit(get_tokens())
??lookup_users
source('~/Documents/GitHub/dat_prot_sciencespo/R/code/twitter_api_network.R')
source('~/Documents/GitHub/dat_prot_sciencespo/R/code/twitter_api_network.R')
??lookup_users
lookup_users
.user_lookup
i
get_friends(users[i])
rate_limit(get_tokens())
rate_limit(get_tokens())
get_friends(users[i])
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
i
for (i in 39:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
get_friends(users[i])
rate_limit(get_tokens())
rate_limit(get_tokens())
user_el <- do.call("rbind",userrelations)
write.csv(user_el, "filename.csv", row.names = F)
i
rate_limit(get_tokens())
i
for (i in 52:length(users)){
fr <- get_friends(users[i])
friends <- lookup_users(fr, parse = T,tw=F,clean_tweets = F)
friends$user <- users[i]
userrelations[[i]] <- friends
}
i
user_el <- do.call("rbind",userrelations)
View(user_el)
edges <- data.frame(Source=user_el$user, Target=screen_name)
edges <- data.frame(Source=user_el$user, Target=user_el$screen_name)
edges
library(stringi)
library(stringr)
?g_split
??gsplit
g_split(edges$Source, "@")
strsplit(edges$Source, "@")
class(edges$Source)
strsplit(as.character(edges$Source), "@")
strsplit(as.character(edges$Source), "@")[2]
strsplit(as.character(edges$Source), "@")[[2]]
strsplit(as.character(edges$Source), "@")[1][[2]]
strsplit(as.character(edges$Source), "@")[2]
unlist(strsplit(as.character(edges$Source), "@"))
na.omit(unlist(strsplit(as.character(edges$Source), "@")))
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source[Source==""] <- NA
na.omit(Source)
Source[Source==""]
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source[Source==""]
Source[Source==""] <- NA
Source
na.omit(Source)
Source <- na.omit(Source)
Source
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source[Source==""] <- NA
Source <- na.omit(Source)
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source[Source==""] <- NA
Source <- Source[na.omit(Source)]
Source
Source[na.omit(Source)]
na.omit(Source)
Source[na.omit(Source)]
is.na(Source)
Source[which(!is.na(Source))]
which(!is.na(Source))
!is.na(Source)
which(!is.na(Source))
!is.na(Source)
na.omit(Source)
Source
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source[Source==""] <- NA
na.omit(Source)
Source[c(na.omit(Source))]
Source
Source[!is.na(Source)]
Source <- Source[!is.na(Source)]
edges$Source <- Source
edges$Source
Source <- (unlist(strsplit(as.character(edges$Source), "@")))
Source
(strsplit(as.character(edges$Source), "@"))
lapply((strsplit(as.character(edges$Source), "@")),'[',2)
edges$Source <- lapply((strsplit(as.character(edges$Source), "@")),'[',2)
View(edges)
users
lookup_users(users, parse = T,tw=F,clean_tweets = F)
users
users <- lapply((strsplit(as.character(users), "@")),'[',2)
lookup_users(users, parse = T,tw=F,clean_tweets = F)
users <- lookup_users(users, parse = T,tw=F,clean_tweets = F)
# Import list of actors --------------------------------------------------------------------
actors <- read.table("../data/actors.csv", sep=";", header=T,stringsAsFactors=F)
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors
users <- actors$Twitter
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors
users
# Import list of actors --------------------------------------------------------------------
actors <- read.table("../data/actors.csv", sep=";", header=T,stringsAsFactors=F)
actors$Twitter
users <- actors$Twitter
lapply((strsplit(as.character(users), "@")),'[',2)
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors <- lookup_users(users, parse = T,tw=F,clean_tweets = F)
users
actors$user
nrow(actors)
lookup_users(users, parse = T,tw=F,clean_tweets = F)
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
nrow(actors)
users
na.omit(users)
na.omit(users)
users[users==""] <- NA
na.omit(users)
actors$user <- na.omit(users)
user_el <- rbind(actors,userrelations)
actors
nrow(actors)
ncol(actors)
ncol(userrelations)
userrelations
user_el <- rbind(actors,user_el)
write.csv(user_el, "nodes.csv", row.names = T)
write.csv(edges, "nodes.csv", row.names = T)
edges
write.csv(user_el, "nodes.csv", row.names = T)
write.csv(edges, "edges.csv", row.names = T)
class(edges)
as.data.frame(edges)
write.csv(as.data.frame(edges), "edges.csv", row.names = T)
class(edges(
class(edges)
class(edges)
class(edges)
class(edges$Source)
unlist(edges$Source)
edges$Source <- (unlist(edges$Source))
write.csv(as.data.frame(edges), "edges.csv", row.names = T)
write.csv(as.data.frame(edges), "edges.csv", row.names = F)
user_el$Target <- user_el$screen_name
user_el$user
actors$user
lapply((strsplit(as.character(user_el$users), "@")),'[',2)
user_el$users
lapply((strsplit(as.character(user_el$user), "@")),'[',2)
unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
user_el$user <- unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
user_el$Source <- unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
write.csv(user_el, "nodes.csv", row.names = T)
user_el$Source
lapply((strsplit(as.character(user_el$user), "@")),'[',2)
user_el$user
# Import list of actors --------------------------------------------------------------------
actors <- read.table("../data/actors.csv", sep=";", header=T,stringsAsFactors=F)
users <- actors$Twitter
user_el$screen_name
user_el$Target <- user_el$screen_name
user_el <- do.call("rbind",userrelations)
user_el
user_el
user_el <- do.call("rbind",userrelations)
users
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
users[users==""] <- NA
users[users==""] <- NA
actors$user <- na.omit(users)
# Import list of actors --------------------------------------------------------------------
actors <- read.table("../data/actors.csv", sep=";", header=T,stringsAsFactors=F)
users <- actors$Twitter
users[users==""] <- NA
na.omit(users)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
lapply((strsplit(as.character(users), "@")),'[',2)
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors <- na.omit(users)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors
users
actors <- na.omit(users)
actors
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors
unlist(actors)
unlist(actors)
unlist(actors)
unlist(actors)
c(actors)
lookup_users(c(actors), parse = T,tw=F,clean_tweets = F)
actors
as.character(actors)
actors <- as.character(actors)
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
rate_limit(get_tokens())
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors <- as.character(actors)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors
actors <- na.omit(users)
actors <- as.character(actors)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
actors <- na.omit(users)
actors
actors <- as.character(actors)
actors
lookup_users(actors, parse = T,tw=F,clean_tweets = F)
rate_limit(get_tokens())
lapply((strsplit(as.character(users), "@")),'[',2)
actors <- lapply((strsplit(as.character(users), "@")),'[',2)
actors <- as.character(actors)
actors <- lookup_users(actors, parse = T,tw=F,clean_tweets = F)
user_el <- rbind(actors,user_el)
user_el <- do.call("rbind",userrelations)
unlist(lapply((strsplit(as.character(users), "@")),'[',2))
actors$user <- unlist(lapply((strsplit(as.character(users), "@")),'[',2))
actors$user <-
na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2)))
actors$user <-
na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2)))
actors$user <-
na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2)))
actors$user
actors$user <- as.character(na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2)))_
as.character(na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2))))
actors$user <- as.character(na.omit(unlist(lapply((strsplit(as.character(users), "@")),'[',2))))
user_el <- rbind(actors,user_el)
unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
user_el$Target <- user_el$screen_name
user_el$Source <- unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
user_el
unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
user_el$Source <- unlist(lapply((strsplit(as.character(user_el$user), "@")),'[',2))
write.csv(user_el, "nodes.csv", row.names = T)
#write.csv(as.data.frame(edges), "edges.csv", row.names = F)
View(user_el)
user_el$Id <- user_el$screen_name
write.csv(user_el, "nodes.csv", row.names = T)
user_el$Id
